#include "Alphabets.hpp"

const Alphabets::Alphabet Alphabets::alphabets[26] = {
  // A
  {3, 4, {
    {0, 1, 0, 0},
    {1, 0, 1, 0},
    {1, 1, 1, 0},
    {1, 0, 1, 0}
  }},

  // B
  {3, 4, {
    {1, 0, 1, 0},
    {1, 1, 0, 0},
    {1, 0, 1, 0},
    {1, 1, 0, 0}
  }},

  // C
  {3, 4, {
    {0, 1, 1, 0},
    {1, 0, 0, 0},
    {1, 0, 0, 0},
    {0, 1, 1, 0}
  }},

  // D
  {3, 4, {
    {1, 1, 0, 0},
    {1, 0, 1, 0},
    {1, 0, 1, 0},
    {1, 1, 0, 0}
  }},

  // E
  {3, 4, {
    {1, 1, 1, 0},
    {1, 1, 1, 0},
    {1, 0, 0, 0},
    {1, 1, 1, 0}
  }},

  // F
  {3, 4, {
    {1, 1, 1, 0},
    {1, 0, 0, 0},
    {1, 1, 1, 0},
    {1, 0, 0, 0}
  }},

  // G
  {4, 4, {
    {1, 1, 0, 0},
    {1, 0, 1, 1},
    {1, 0, 0, 1},
    {1, 1, 1, 1}
  }},

  // H
  {3, 4, {
    {1, 0, 1, 0},
    {1, 1, 1, 0},
    {1, 0, 1, 0},
    {1, 0, 1, 0}
  }},

  // I
  {3, 4, {
    {1, 1, 1, 0},
    {0, 1, 0, 0},
    {0, 1, 0, 0},
    {1, 1, 1, 0}
  }},

  // J
  {4, 4, {
    {0, 1, 1, 1},
    {0, 0, 1, 0},
    {1, 0, 1, 0},
    {1, 1, 1, 0}
  }},

  // K
  {4, 4, {
    {1, 0, 1, 1},
    {1, 1, 0, 0},
    {1, 0, 1, 0},
    {1, 0, 0, 1}
  }},

  // L
  {3, 4, {
    {1, 0, 0, 0},
    {1, 0, 0, 0},
    {1, 0, 0, 0},
    {1, 1, 1, 0}
  }},

  // M
  {4, 4, {
    {1, 1, 1, 1},
    {1, 1, 1, 1},
    {1, 0, 0, 1},
    {1, 0, 0, 1}
  }},

  // N
  {4, 4, {
    {1, 0, 0, 1},
    {1, 1, 0, 1},
    {1, 0, 1, 1},
    {1, 0, 0, 1}
  }},

  // O
  {4, 4, {
    {1, 1, 1, 1},
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {1, 1, 1, 1}
  }},

  // P
  {3, 4, {
    {1, 1, 1, 0},
    {1, 0, 1, 0},
    {1, 1, 1, 0},
    {1, 0, 0, 0}
  }},

  // Q
  {4, 4, {
    {1, 1, 1, 0},
    {1, 0, 1, 0},
    {1, 1, 1, 0},
    {0, 0, 1, 1}
  }},

  // R
  {4, 4, {
    {1, 1, 1, 0},
    {1, 0, 1, 0},
    {1, 1, 1, 1},
    {1, 0, 0, 1}
  }},

  // S
  {3, 4, {
    {0, 1, 1, 0},
    {1, 0, 0, 0},
    {0, 0, 1, 0},
    {1, 1, 1, 0}
  }},

  // T
  {3, 4, {
    {1, 1, 1, 0},
    {0, 1, 0, 0},
    {0, 1, 0, 0},
    {0, 1, 0, 0}
  }},

  // U
  {3, 4, {
    {1, 0, 1, 0},
    {1, 0, 1, 0},
    {1, 0, 1, 0},
    {1, 1, 1, 0}
  }},

  // V
  {3, 4, {
    {1, 0, 1, 0},
    {1, 0, 1, 0},
    {1, 0, 1, 0},
    {0, 1, 0, 0}
  }},

  // W
  {4, 4, {
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {1, 1, 1, 1},
    {1, 1, 1, 1}
  }},

  // X
  {4, 4, {
    {1, 0, 0, 1},
    {0, 1, 1, 0},
    {0, 1, 1, 0},
    {1, 0, 0, 1}
  }},

  // Y
  {4, 4, {
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {0, 1, 1, 0},
    {0, 0, 1, 0}
  }},

  // Z
  {3, 4, {
    {1, 1, 1, 0},
    {0, 0, 1, 0},
    {1, 0, 0, 0},
    {1, 1, 1, 0}
  }}
};

Alphabets::Alphabets(char c) {
  id = c - 'A';
  width = alphabets[id].width;
  height = alphabets[id].height;
  display = Display::getInstance();
}

int min(int x, int y) {
  return x < y ? x : y;
}

void Alphabets::draw(int row, int col, int off, int len) {
  for(int i = 0; i < alphabets[id].height; i++) {
    for(int j = 0; j < min(alphabets[id].width, len); j++) {
      if(alphabets[id].fontmap[i][j + off]) {
        display->set(row + i, col + j);
      }
    }
  }
}
